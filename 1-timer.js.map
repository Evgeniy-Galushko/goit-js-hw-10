{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('#datetime-picker');\nconst button = document.querySelector('button[data-start]');\nconst day = document.querySelector('.value[data-days]');\nconst hour = document.querySelector('.value[data-hours]');\nconst minute = document.querySelector('.value[data-minutes]');\nconst second = document.querySelector('.value[data-seconds]');\n\nbutton.disabled = true;\nlet userSelectedDate = null;\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const dayss = Math.floor(ms / day);\n  const days = String(dayss).padStart(2, '0');\n  // Remaining hours\n  const hourss = Math.floor((ms % day) / hour);\n  const hours = String(hourss).padStart(2, '0');\n  // Remaining minutes\n  const minutess = Math.floor(((ms % day) % hour) / minute);\n  const minutes = String(minutess).padStart(2, '0');\n  // Remaining seconds\n  const secondss = Math.floor((((ms % day) % hour) % minute) / second);\n  const seconds = String(secondss).padStart(2, '0');\n\n  return { days, hours, minutes, seconds };\n}\n\nconst options = {\n  enableTime: true,\n  dateFormat: 'Y-m-d H:i',\n  time_24hr: true,\n  defaultDate: Date.now(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < Date.now()) {\n      iziToast.warning({\n        backgroundColor: 'red',\n        position: 'center',\n        title: 'Caution',\n        message: 'Please choose a date in the future',\n      });\n      selectedDates[0] = new Date();\n    } else {\n      button.disabled = false;\n      userSelectedDate = selectedDates[0];\n    }\n  },\n};\n\nflatpickr(input, options);\n\nfunction startCounter(event) {\n  const temer = setInterval(() => {\n    const currentDate = Date.now();\n    const timerTime = userSelectedDate - currentDate;\n    const counter = convertMs(timerTime);\n    button.disabled = true;\n    input.disabled = true;\n    counterUpdate(counter);\n    if (timerTime < 999) {\n      clearInterval(temer);\n      button.disabled = false;\n      input.disabled = false;\n    }\n  }, 1000);\n\n  function counterUpdate({ days, hours, minutes, seconds }) {\n    day.textContent = days;\n    hour.textContent = hours;\n    minute.textContent = minutes;\n    second.textContent = seconds;\n  }\n}\nbutton.addEventListener('click', startCounter);\n"],"names":["input","button","day","hour","minute","second","userSelectedDate","convertMs","ms","dayss","days","hourss","hours","minutess","minutes","secondss","seconds","options","selectedDates","iziToast","flatpickr","startCounter","event","temer","currentDate","timerTime","counter","counterUpdate"],"mappings":"2GAKA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,oBAAoB,EACpDC,EAAM,SAAS,cAAc,mBAAmB,EAChDC,EAAO,SAAS,cAAc,oBAAoB,EAClDC,EAAS,SAAS,cAAc,sBAAsB,EACtDC,EAAS,SAAS,cAAc,sBAAsB,EAE5DJ,EAAO,SAAW,GAClB,IAAIK,EAAmB,KAEvB,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAQ,KAAK,MAAMD,EAAK,KAAG,EAC3BE,EAAO,OAAOD,CAAK,EAAE,SAAS,EAAG,GAAG,EAEpCE,EAAS,KAAK,MAAOH,EAAK,MAAO,IAAI,EACrCI,EAAQ,OAAOD,CAAM,EAAE,SAAS,EAAG,GAAG,EAEtCE,EAAW,KAAK,MAAQL,EAAK,MAAO,KAAQ,GAAM,EAClDM,EAAU,OAAOD,CAAQ,EAAE,SAAS,EAAG,GAAG,EAE1CE,EAAW,KAAK,MAASP,EAAK,MAAO,KAAQ,IAAU,GAAM,EAC7DQ,EAAU,OAAOD,CAAQ,EAAE,SAAS,EAAG,GAAG,EAEhD,MAAO,CAAE,KAAAL,EAAM,MAAAE,EAAO,QAAAE,EAAS,QAAAE,CAAO,CACxC,CAEA,MAAMC,EAAU,CACd,WAAY,GACZ,WAAY,YACZ,UAAW,GACX,YAAa,KAAK,IAAK,EACvB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,KAAK,IAAG,GAC7BC,EAAS,QAAQ,CACf,gBAAiB,MACjB,SAAU,SACV,MAAO,UACP,QAAS,oCACjB,CAAO,EACDD,EAAc,CAAC,EAAI,IAAI,OAEvBjB,EAAO,SAAW,GAClBK,EAAmBY,EAAc,CAAC,EAErC,CACH,EAEAE,EAAUpB,EAAOiB,CAAO,EAExB,SAASI,EAAaC,EAAO,CAC3B,MAAMC,EAAQ,YAAY,IAAM,CAC9B,MAAMC,EAAc,KAAK,MACnBC,EAAYnB,EAAmBkB,EAC/BE,EAAUnB,EAAUkB,CAAS,EACnCxB,EAAO,SAAW,GAClBD,EAAM,SAAW,GACjB2B,EAAcD,CAAO,EACjBD,EAAY,MACd,cAAcF,CAAK,EACnBtB,EAAO,SAAW,GAClBD,EAAM,SAAW,GAEpB,EAAE,GAAI,EAEP,SAAS2B,EAAc,CAAE,KAAAjB,EAAM,MAAAE,EAAO,QAAAE,EAAS,QAAAE,CAAO,EAAI,CACxDd,EAAI,YAAcQ,EAClBP,EAAK,YAAcS,EACnBR,EAAO,YAAcU,EACrBT,EAAO,YAAcW,CACtB,CACH,CACAf,EAAO,iBAAiB,QAASoB,CAAY"}